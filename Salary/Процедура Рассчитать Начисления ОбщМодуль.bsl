

Процедура РассчитатьНачисления(Движения, Ссылка, МассивВидовРасчета) Экспорт 
	
	
	// Расчет ОКЛАДА
	// ? Вид Расчета <> НЕОПРЕДЕЛЕНО  → вернется Индекс 
	
	РасчетОкладаНеобходим = НЕ
		МассивВидовРасчета.Найти(ПланыВидовРасчета.ОсновныеНачисления.Оклад)= Неопределено;
	
	Если РасчетОкладаНеобходим Тогда      
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ОкладФакт,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК ОкладПлан,
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Регистратор
		|				И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика";
		
		Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаОклад = РезультатЗапроса.Выбрать();
		
		Для каждого СтрокаНабора Из Движения.ОсновныеНачисления Цикл
			Если СтрокаНабора.ВидРасчета <>  ПланыВидовРасчета.ОсновныеНачисления.Оклад  Тогда 
				Продолжить;
			КонецЕсли;
			
			ВыборкаОклад.Сбросить();
			ВыборкаОклад.НайтиСледующий(СтрокаНабора.НомерСтроки, "НомерСтроки");
			
			// проверка / 0
			СтрокаНабора.Результат = ?(ВыборкаОклад.ОкладПлан = 0
			,0
			,СтрокаНабора.Размер/ВыборкаОклад.ОкладПлан*ВыборкаОклад.ОкладФакт); 
			СтрокаНабора.ОтработаноРеквизит = ВыборкаОклад.ОкладФакт;
			
		КонецЦикла;
		
		Движения.ОсновныеНачисления.Записать(,Истина);    
		
	КонецЕсли;
	
	
	// Расчет ПРЕМИИ 
	// ? Вид Расчета <> НЕОПРЕДЕЛЕНО  → вернется Индекс
 
	
	РасчетПремииНеобходим = НЕ
		МассивВидовРасчета.Найти(ПланыВидовРасчета.ДополнительныеНачисления.Премия)= Неопределено;
	
	Если РасчетПремииНеобходим Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисленияБазаОсновныеНачисления.РезультатБаза КАК РезультатБаза,
		|	ДополнительныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаОсновныеНачисления(
		|			&Измерения,
		|			&Измерения,
		|			,
		|			Регистратор = &Регистратор
		|				И ВидРасчета = &ВидРасчета) КАК ДополнительныеНачисленияБазаОсновныеНачисления";
		
		Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ДополнительныеНачисления.Премия);
		
		Измерения = Новый Массив;
		Измерения.Добавить("Сотрудник");
		Измерения.Добавить("Подразделение"); 
		
		Запрос.УстановитьПараметр("Измерения", Измерения);   
		
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаПремия = РезультатЗапроса.Выбрать();
		
		Для каждого СтрокаНабора Из Движения.ДополнительныеНачисления Цикл    
			
			Если СтрокаНабора.ВидРасчета <> ПланыВидовРасчета.ДополнительныеНачисления.Премия Тогда 
				Продолжить;
			КонецЕсли;
			
			ВыборкаПремия.Сбросить();
			Если ВыборкаПремия.НайтиСледующий(СтрокаНабора.НомерСтроки,"НомерСтроки")Тогда 
				СтрокаНабора.Результат = СтрокаНабора.Размер * ВыборкаПремия.РезультатБаза / 100;
			Иначе 
				СтрокаНабора.Результат = 0;		
			КонецЕсли;	
		КонецЦикла; 	
		
		Движения.ДополнительныеНачисления.Записать(,Истина); 	
	
	КонецЕсли;
	
	
	// Расчет КОМАНДИРОВКИ 
	// ? Вид Расчета <> НЕОПРЕДЕЛЕНО  → вернется Индекс
	
	РасчетКомандировкиНеобходим = НЕ
		МассивВидовРасчета.Найти(ПланыВидовРасчета.ОсновныеНачисления.Командировка) = Неопределено;
	
	Если РасчетКомандировкиНеобходим Тогда       
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ОтработаноФакт,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеБазовыйПериод, 0) КАК ОтработаноНорма,
		|	ЕСТЬNULL(ОсновныеНачисленияБазаДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп,
		|	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Регистратор
		|				И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаДополнительныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Регистратор
		|					И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияБазаДополнительныеНачисления
		|		ПО ОсновныеНачисленияДанныеГрафика.НомерСтроки = ОсновныеНачисленияБазаДополнительныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Регистратор
		|					И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияБазаОсновныеНачисления
		|		ПО ОсновныеНачисленияДанныеГрафика.НомерСтроки = ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки";
		
		Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Командировка);    
		
		Измерения = Новый Массив;
		Измерения.Добавить("Сотрудник");
		Измерения.Добавить("Подразделение");
		
		Запрос.УстановитьПараметр("Измерения", Измерения);
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаКомандировка = РезультатЗапроса.Выбрать();   
		
		СтруктураДляПоиска = Новый Структура("НомерСтроки");
		
		Для каждого СтрокаНабора  Из Движения.ОсновныеНачисления Цикл     
			
			Если СтрокаНабора.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Командировка Тогда 	
				Продолжить; 
			КонецЕсли;
			
			СтруктураДляПоиска.НомерСтроки = СтрокаНабора.НомерСтроки;
			
			ВыборкаКомандировка.Сбросить();                                         	
			ВыборкаКомандировка.НайтиСледующий(СтруктураДляПоиска);
			
			СтрокаНабора.Результат = ?(ВыборкаКомандировка.ОтработаноНорма = 0
			,0
			,(ВыборкаКомандировка.БазаДоп + ВыборкаКомандировка.БазаОсн)/
			ВыборкаКомандировка.ОтработаноНорма * ВыборкаКомандировка.ОтработаноФакт);
			
			СтрокаНабора.ОтработаноРеквизит = ВыборкаКомандировка.ОтработаноФакт;
			
		КонецЦикла; 	
		
		Движения.ОсновныеНачисления.Записать(,Истина);	
				
	КонецЕсли;
	
	
КонецПроцедуры
